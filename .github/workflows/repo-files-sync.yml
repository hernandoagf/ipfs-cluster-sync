name: Repo files sync
on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  RepoFilesSync:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      
      - name: Clone repos and copy files
        run: |
          mkdir external-repos
          readarray -t routeArray < files-to-sync.txt
          echo "Cloning external repos into the external-repos folder..."
          for route in "${routeArray[@]}";
            do urlArray=(`echo $route | tr '/' ' '`)
            repoUrl="${urlArray[0]}//${urlArray[1]}/${urlArray[2]}/${urlArray[3]}"
            cd external-repos
            [ ! -d "${urlArray[3]}" ] && git clone $repoUrl || echo "Repo ${urlArray[3]} already cloned, skipping..."
            cd ..;
          done
          echo "Copying files that will be synced into the files folder..."
          cd external-repos
          for route in "${routeArray[@]}";
            do filePathArray=(`echo $route | tr '/' ' '`)
            filePathArraySliced=("${filePathArray[@]:3}")
            function join { local IFS="$1"; shift; echo "$*"; }
            filePath=$(join / ${filePathArraySliced[@]})
            cd ${filePathArraySliced[0]}
            git switch ${filePathArraySliced[2]}
            cd ..
            decodedFilePath=(`echo $filePath | perl -MURI::Escape -pe 's/.*/uri_unescape($&)/e'`)
            folderPathArraySliced=("${filePathArray[@]:3:$((${#filePathArray[@]} - 3 - 1))}")
            folderPath=$(join / ${folderPathArraySliced[@]})
            echo $folderPath
            decodedFolderPath=(`echo $folderPath | perl -MURI::Escape -pe 's/.*/uri_unescape($&)/e'`)
            echo $decodedFolderPath
            echo $filePath
            echo $decodedFilePath
            mkdir -p "..files/${decodedFolderPath}" && cp $decodedFilePath $_;
          done
